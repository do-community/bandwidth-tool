/*
Copyright 2020 DigitalOcean

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

$header: #0071fe;
@import "~do-bulma/src/style";

.helpfulness-cont {
  margin: ($margin * 4) 0 0;
}

.do-bulma {
  $pretty--color-dark: $primary;
  $pretty--color-default: $primary;
  @import "~pretty-checkbox/src/pretty-checkbox";

  // Reset community info box styles
  .info {
    background: none;
    border-radius: 0;
    font-size: inherit;
    line-height: inherit;
    margin: 0;
    padding: 0;
  }

  // These aren't links, use the help cursor, not pointer
  .fa,
  .far,
  .fas,
  .fab {
    &.help {
      cursor: help;
    }
  }

  .container {
    padding: ($margin * 4) 0;
    width: 100%;

    @media (max-width: $breakpoint) {
      padding: $margin;
    }

    &.inset {
      background: $input-disabled;
      max-width: none !important;

      @media (max-width: $breakpoint) {
        padding: $margin ($margin / 2);
      }

      > .container {
        padding: 0;

        > .panel {
          box-shadow: 0 2px 4px rgba($dark-blue, .06);
        }
      }
    }
  }

  .explainer {
    h2 {
      @include font-bold;

      font-size: 36px;
      margin: $margin 0 ($margin * 4);
      text-align: center;

      @media (max-width: $breakpoint) {
        margin: $margin 0 ($margin * 2);
      }
    }

    h3 {
      @include font-bold;

      margin: $margin 0;
    }

    p {
      margin: 0;
    }
  }

  .bandwidth {
    margin: 0;
    padding: 3.75rem;
    text-align: left;

    @media (max-width: $breakpoint) {
      padding: 1.5rem;
    }

    h1,
    h3 {
      margin: 0;
    }

    h3 {
      small {
        font-size: .8em;
      }
    }

    .pool {
      margin: 3rem 0;

      h2 {
        small {
          font-size: .65em;

          i {
            color: inherit;
          }
        }
      }

      .stats {
        align-items: center;
        margin: 1rem 0 0;

        .data {
          padding: 0 1.5rem 0 0;

          @media (max-width: $breakpoint) {
            padding: .5rem 0;
          }

          p {
            color: $text;
            margin: 0;

            span,
            b {
              font-size: $font-size * 1.1;
            }
          }

          .allowance {
            b {
              color: $primary;
            }
          }

          .consumption {
            b {
              color: $dark-blue;
            }
          }
        }

        .info {
          padding: 0 0 0 1.5rem;

          @media (max-width: $breakpoint) {
            padding: .5rem 0;
          }

          p {
            color: $muted;
            font-size: $font-size * .8;
            text-align: right;

            @media (max-width: $breakpoint) {
              text-align: left;
            }
          }

          a {
            white-space: nowrap;
          }
        }
      }
    }

    .droplets {
      margin: 0 0 3rem;
    }
  }

  .panel-list {
    &.panel-list-vertical {
      .panel {
        @media (max-width: $breakpoint) {
          flex-direction: column;
        }

        .icon {
          height: 2.5rem;
          margin: 0 .25rem 0 0;
          width: 2.5rem;

          @media (max-width: $breakpoint) {
            margin: 0 0 .25rem;
          }

          svg {
            height: 100%;
            max-height: 100%;
            max-width: 100%;
            width: auto;
          }
        }

        .info {
          display: flex;
          flex-direction: column;
          margin: .2rem 1rem 0 .2rem;

          @media (max-width: $breakpoint) {
            margin: .2rem 0 1rem .2rem;
          }

          .primary-info,
          .secondary-info {
            align-items: center;
            display: flex;
            flex-direction: row;

            @media (max-width: $breakpoint) {
              flex-wrap: wrap;
            }

            p {
              margin: 0;

              + p {
                margin-left: .4rem;
              }
            }
          }

          .secondary-info {
            margin-top: .25rem;

            p {
              color: $text-secondary;
              font-size: $font-size * .8;

              + p {
                margin-left: .15rem;

                &::before {
                  content: "/ ";
                }
              }
            }
          }
        }

        .tertiary-info {
          align-items: center;
          display: flex;
          flex-direction: column;
          justify-content: center;
          margin: 0 2.5rem;

          @media (max-width: $breakpoint) {
            margin: 1rem 0;
          }

          p {
            margin: 0;
          }
        }

        .overage {
          cursor: help;
          font-size: 1.25rem;
          margin: 0 2.5rem 0 -1.5rem;

          @media (max-width: $breakpoint) {
            margin: 0 0 1rem;
          }
        }

        .right {
          @media (max-width: $breakpoint) {
            flex-direction: column;
            margin: 0;
          }
        }
      }
    }

    .panel {
      @media (max-width: $breakpoint) {
        flex-basis: calc(50% - 1rem);
      }
    }
  }

  .input-container {
    display: flex;
    flex-direction: column;
    margin: 0 .5rem;
    width: auto;

    @media (max-width: $breakpoint) {
      margin: .5rem 0;
    }

    .control {
      display: inline-block;
      position: relative;

      input {
        height: $height * .6;
        margin: 0;
        padding: 0 ($margin / 2);
        width: $height * 2.5;

        &.slim {
          width: $height * 1.5;
        }

        &:focus {
          box-shadow: 0 0 2px rgba($primary, .5);

          ~ .suffix {
            color: $primary;
          }
        }
      }

      .suffix {
        color: $text-secondary;
        line-height: 1;
        pointer-events: none;
        position: absolute;
        right: $margin * 1.5;
        top: ($height * .6 - $font-size) / 2;
        transition: color $transition;
        z-index: 10;
      }

      i {
        position: initial;
      }
    }

    .label {
      @include font-regular;

      color: $muted;
      font-size: $font-size * .7;
      line-height: 1;

      &:not(:first-child) {
        margin-top: .25rem;
      }

      &:not(:last-child) {
        margin-bottom: .25rem;
      }
    }
  }

  .panel {
    transition: opacity $transition, box-shadow $transition;

    &.is-selectable {
      &:hover {
        a {
          &.button {
            &.is-primary {
              opacity: 1;
            }
          }
        }
      }

      a {
        &.button {
          &.is-primary {
            font-size: .9em;
            height: $margin * 1.5;
            line-height: $margin * 1.5;
            opacity: 0;
            padding: 0 ($margin / 1.5);
            pointer-events: none;
            transition: opacity $transition;
          }
        }
      }
    }

    &.is-droplet {
      p {
        em {
          color: $mono-blue;
        }
      }

      .sub-block {
        bottom: unset;
        display: block;
        line-height: 1.5;
        margin-bottom: .5em;
        top: -.1em;
      }
    }
  }

  .bars {
    .bar-stack {
      .bar {
        transition: width $transition, opacity $transition;

        &.is-unfocused {
          opacity: .4;
        }
      }
    }
  }

  .costs {
    table {
      border: 0;
      margin: ($margin * .5) 0 ($margin * 1) auto;

      tr {
        border: 0;

        &.hr {
          border-top: 2px solid $border;
        }

        td {
          border: 0;
          text-align: left;

          &:not(:last-child) {
            border-color: $border;
            border-style: solid;
            border-width: 0 1px 0 0;
            text-align: right;
          }

          .input-container {
            align-items: center;
            flex-direction: row;
            margin: 0;

            .label {
              font-size: .875em;
              margin: 0 ($margin * .5);
            }
          }
        }
      }
    }

    p {
      color: $muted;
      font-size: $font-size * .7;
      margin: ($margin * .5) 0 ($margin * 1.5);
      text-align: right;

      &.collapse {
        cursor: pointer;
        font-size: $font-size * .85;
        margin: ($margin * 1.5) 0 0;

        i {
          font-size: 1.5em;
          margin: 0 0 0 .05rem;
          text-align: center;
          vertical-align: top;
          width: 1rem;
        }
      }
    }
  }

  .droplet-picker-button {
    display: flex;
    flex-direction: row;
    justify-content: center;

    .button {
      box-shadow: 0 2px 4px rgba($dark-blue, .06);
      font-size: 18px;
      height: $margin * 3.5;
      padding: 0 $margin * 2.5;
      transition: background $transition, box-shadow $transition, color $transition;

      &:hover,
      &:focus {
        box-shadow: 0 2px 4px rgba($dark-blue, .16);
      }
    }
  }

  .droplet-picker {
    .picker {
      .tabs {
        margin: 0;

        @media (max-width: $breakpoint) {
          margin: 0 0 $margin;
        }
      }

      .switch {
        margin: 0 .5rem .5rem;
        padding: 0 .15rem;

        > span {
          display: inline-block;

          @media (max-width: $breakpoint) {
            display: block;
          }
        }

        .pretty {
          &.p-fill {
            &.p-switch {
              line-height: 1.1;
              margin: 0 .25rem;

              @media (max-width: $breakpoint) {
                margin: .75rem 0;
                transform: rotate(90deg);
              }

              input {
                &:checked {
                  ~ .state {
                    label {
                      &::after {
                        left: calc(1em - 2px);

                        @media (max-width: $breakpoint) {
                          left: calc(1em + 1px);
                        }
                      }
                    }
                  }
                }
              }

              .state {
                &::before {
                  height: 1em;
                  top: 0;
                  transition: all $transition;
                }

                label {
                  @include font-regular;

                  min-width: 2em;
                  text-indent: 0;

                  &::before,
                  &::after {
                    height: 1em;
                    top: 0;
                    transition: all $transition;
                    width: 1em;

                    @media (max-width: $breakpoint) {
                      left: 1px;
                      top: 1px;
                    }
                  }
                }
              }
            }
          }
        }
      }

      .radio {
        margin: .5rem;

        label {
          @include font-regular;

          color: $text;
          font-size: 1rem;
        }
      }
    }
  }

  .faqs {
    h4 {
      color: $dark-blue;
      font-size: .95rem;
      margin: ($margin * 2) 0 ($margin / 2);
      text-transform: none;

      + p {
        font-size: .9rem;
        margin: 0 0 ($margin / 2);
      }
    }
  }
}
